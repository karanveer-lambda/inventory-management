# Generated by Django 5.1.2 on 2024-11-08 06:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import home.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Demand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personId', models.CharField(max_length=100)),
                ('demandId', models.CharField(max_length=100)),
                ('productId', models.CharField(max_length=100)),
                ('assetType', models.CharField(choices=[('mobile', 'MOBILE'), ('laptop', 'LAPTOP'), ('server', 'SERVER'), ('printer', 'PRINTER'), ('wire', 'WIRE'), ('switch', 'SWITCH'), ('air purifier', 'AIRPURIFIER'), ('oft', 'OFR'), ('monitor', 'MONITOR'), ('tb', 'TV'), ('air conditioner', 'AIRCONDITIONER'), ('cctv camera', 'CCTVCAMERA'), ('furniture', 'FURNITURE'), ('door access machine', 'DOORACCESSMACHINE'), ('biometric machine', 'BIOMETRICMACHINE'), ('racks', 'RACKS'), ('projector', 'PROJECTOR')], max_length=19)),
                ('leased', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=3)),
                ('subAsset', models.CharField(blank=True, max_length=50)),
                ('location', models.CharField(choices=[('usa', 'USA'), ('dubai', 'DUBAI'), ('mumbai', 'MUMBAI'), ('dublin', 'DUBLIN'), ('noida', 'NOIDA')], max_length=11)),
                ('department', models.CharField(choices=[('engineering', 'Engineering'), ('finance', 'Finance'), ('it', 'IT'), ('admin', 'Admin'), ('hr', 'HR'), ('sales', 'Sales'), ('marketing', 'Marketing'), ('procurement', 'PROCUREMENT')], max_length=11)),
                ('category', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('make', models.CharField(blank=True, max_length=100)),
                ('model', models.CharField(blank=True, max_length=20)),
                ('version', models.CharField(blank=True, max_length=50)),
                ('quantity', models.CharField(max_length=5)),
                ('quantityPlaced', models.CharField(default=0, max_length=5)),
                ('partCode', models.CharField(blank=True, max_length=10)),
                ('delivery', models.DateField(default=django.utils.timezone.now)),
                ('leasedEndDate', models.DateField(blank=True)),
                ('status', models.CharField(choices=[('in procurement', 'PROCUREMENT'), ('select vendor', 'SELECTVENDOR'), ('vendor allocation', 'VENDORALLOCATION'), ('quote approval', 'QUOTEAPPROVAL')], default='in procurement', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=40)),
                ('country', models.CharField(max_length=10)),
                ('GST', models.CharField(max_length=15, validators=[django.core.validators.MinLengthValidator(15), django.core.validators.MaxLengthValidator(15)])),
                ('PAN', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10)])),
                ('contactNumber', models.CharField(max_length=15)),
                ('emailId', models.EmailField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=128, validators=[django.core.validators.MinLengthValidator(8), django.core.validators.MaxLengthValidator(128)])),
            ],
        ),
        migrations.CreateModel(
            name='RegisterUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=250, unique=True)),
                ('department', models.CharField(choices=[('engineering', 'Engineering'), ('finance', 'Finance'), ('it', 'IT'), ('admin', 'Admin'), ('hr', 'HR'), ('sales', 'Sales'), ('marketing', 'Marketing'), ('procurement', 'PROCUREMENT')], max_length=11)),
                ('role', models.CharField(choices=[('admin', 'ADMIN'), ('user', 'USER')], default='admin', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Procurement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('productId', models.CharField(max_length=100)),
                ('quoteValidTill', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'PENDING'), ('ready for quote', 'READYFORQUOTE'), ('reject', 'REJECT'), ('quoted', 'QUOTED')], default=home.models.ProcurementStatus['PENDING'], max_length=25)),
                ('quantity', models.CharField(blank=True, max_length=100)),
                ('trackId', models.CharField(blank=True, max_length=100)),
                ('rates', models.CharField(blank=True, max_length=100)),
                ('tax', models.CharField(blank=True, max_length=100)),
                ('customDuty', models.CharField(blank=True, max_length=100)),
                ('others', models.CharField(blank=True, max_length=100)),
                ('totalCost', models.CharField(blank=True, max_length=100)),
                ('supplyTargetDate', models.DateField(blank=True)),
                ('warranty', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], max_length=3)),
                ('warrantyValidTill', models.DateField(blank=True)),
                ('PONumber', models.CharField(blank=True, max_length=100)),
                ('challanNumber', models.CharField(blank=True, max_length=100)),
                ('invoiceNumber', models.CharField(blank=True, max_length=100)),
                ('invoiceAmount', models.CharField(blank=True, max_length=100)),
                ('lastDate', models.DateField(blank=True)),
                ('demandId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.demand')),
                ('vendorId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.vendor')),
            ],
        ),
    ]
